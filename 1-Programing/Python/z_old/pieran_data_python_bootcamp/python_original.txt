########## python environments:

-- Text editors: atom, sublime text...
-- Full IDEs:  PyCharm, Spyder
-- Notebook:  Jupyter Notebook

##########
Install: anaconda and sublime



########## Anaconda navigator:

-- Run it on windows:

Open Jupyter notebook:  http://localhost:8888
The first time will ask you for a token, run into a console (cmd, shell, etc):

C:\Users\Trabajo\Desktop\python>jupyter notebook list
Currently running servers:
http://localhost:8892/?token=de83e25756e836c223161c91c6dbb1857cd52166bd1c94d5 :: C:\Users\Trabajo
http://localhost:8888/?token=5ff9753430910a29f02831366e0e2c09d9263072492e49f1 :: C:\Users\Trabajo
http://localhost:8891/?token=9764c756c2660f0ebdf12941942b704e7cd3f1852f9adf90 :: C:\Users\Trabajo
http://localhost:8890/?token=91d75a5728d3510039af33563cd65d3c2e9d7c2eaa9005be :: C:\Users\Trabajo
http://localhost:8889/?token=2a3bea1eac5716cd2131d487b9aaeb0058ccb43dc500f96c :: C:\Users\Trabajo

--- On jupyter notebook, Click on New -- Notebook: Python 3 -- you can run 
lines in cells

######## Anaconda Jupyter Keystrokes:
dd ---> delete current cell
a  ---> insert cell above current cell
b  ---> insert cell below current cell
Shift + enter to run it or click the play button 

Restart the kernel ---> if you used a special word, like 'int' 'float' etc, to assign a variable into it.
Do it on: Kernel -- Restart
This will delete all the variables



######## Run program, go to the folder and: python nameprogram.py

######## Run one line command, on the command line: python
print('hello')

quit()


https://github.com/Pierian-Data/Complete-Python-3-Bootcamp



############### Data Types:

Integers       - int   - whole numbers: 3 , 212 , 93
Floating point - float - numbers with decimal:  23.1 , 23.32 , 7.34
String         - str   - ordered sequence of characters:  "hello" 'Sammy' "2000"
List           - list  - ordered sequence of objects: [10,"hello",200.3]
Dictionaries   - dict  - unordered Key:Values pair: {"mykey":"value","name":"Frankie"}
Tuples         - tup   - ordered immutable sequence of objects: (10,"hello,200.2")
Sets  	       - set   - unordered collection of unique objects: {"a","b"}
Booleans       - bool  - Logical value indicating true or false	


############# Doubts:

--Arithmetics:
Module (good to know if a number is even or odd)

Python lets you add, subtract, multiply and divide numbers with reassignment using +=, -=, *=, and /=


################# Variables:  ##############################

-- Python uses Dynamic Typing: you can reassign variables to different data types
PROS: You don't have to write the datatype, saving time
CONTRAS: You can have some bugs because this.


---See data type of a variable, 'a' in this example: (in Jupiter notebook)

type(a)
int

-- Change the data type, 'a' in this example:

a = 30.1 --> we change the value of 'a' to a float data type
type(a)  ---> we ask for the data type of a  
float    ----> a is now a float


Another example:

Setting the variable:
money = 10
type(money)
int

-- Change the data type, 'money' in this example:

money = 10.5 --> we change the value of 'money' to a float data type
type(money)  ---> we ask for the data type of a  
float    ----> a is now a float


######################### Strings: indexing / slicing   Video 014, 015 and 016. --------------------


*-- Indexing: allows you to grab a single character. --------------------

REMEMBER: The positions are going from 0 to the infinite. The first one is 0

mystring = "hello world"

mystring[0]
'h'

mystring[9]
'r'

mystring[-1]
'd' 

mystring[-3]
'r' 


*-- Slicing: let's you to grab a subsection of multiple characters. --------------------

REMEMBER: The positions are going from 0 to the infinite. 

mystring[start:stop:step]

mystring = 'abcdefghi'

* Pick all the characters since 'c' til the end: (Start position)
mystring[2:]
cdefghi

* Pick the first 3 characters: The Stop possition don't include the character in which you are 'd' in this example: 
mystring[:3]  
abc

* Pick from 'C' to 'H' 

mystring[2:-1]

* Reverse the entire string:
mystring[::-1]
ihgfedcba


*-- Strings properties (016):--------------------------------

--String concatenation: Merging 2 strings together. USING  +

name = 'Pam'
last_letters = name[1:]
'am' 

'S' + last_letters
'Sam'


x = "Hello world"
x + " it's beautifull outside!"
"Hello world it's beautifull outside!"


x = x + " it's beautifull outside!"
x
"Hello world it's beautifull outside!"


USING *

multiplica = "Q"
multiplica * 10
'QQQQQQQQQQ'


*-- Methods (016, 017): --------------------

x = 'hello world'  
x.upper()
'HELLO WORLD'

x.lower()
'hello world'

x.split()  ------------> you split in the white space
['hello', 'world']

x.split('o')  ------------> you split in the 'o'
['hell', ' w', 'rld']



-- Scape sentences:  Inside a sentence you can do a change of line \n  or tab \t (4 spaces), etc.

-- len : tell's you how much characters have the string (empty spaces included)

len("hello world")
11 



---





